################################
# Data set 
################################

# relative data folder location 
datafolder = data
# training examples filename
ftrain_ex = Ytrain_orig.dat
# training labels/classes filename 
ftrain_labels = Ctrain_orig.dat
# validation examples filename
fval_ex = Yval_orig.dat
# validation labels/classes filename
fval_labels = Cval_orig.dat
# number of training data elements
ntraining = 5000
# number of validation data elements
nvalidation = 200
# number of features in training and validation examples 
nfeatures = 2
# number of labels/classes
nclasses = 5

# filename for opening weights and bias (set to NONE if not given)
weightsopenfile = NONE
# filename for classification weights and bias (set to NONE if not given)
weightsclassificationfile = NONE

################################
# Neural Network  
################################

# number of channels
nchannels = 8
# number of layers (minimum two, opening layer and classification layer)
nlayers = 30
# final time
T = 5.0
# Activation function ("tanh" or "ReLu" or "SmoothReLu")
activation = SmoothReLu
# Type of network ("dense" the default, or "convolutional")
network_type = dense 
# Opening layer type.  
#  "replicate": replicate image for each convolution.  
#  "activate": same as replicate, only apply tuned, shifted tanh activation function for MNIST. 
type_openlayer = activate
# factor for scaling initial opening layer weights and bias
weights_open_init = 0e-3
# factor for scaling initial weights and bias of intermediate layers
weights_init = 1e-3
# factor for scaling initial classification weights and bias 
weights_class_init = 1e-3

################################
#BRAID 
################################

# coarsening factor on level 0
#   generally, cfactor0 = nlayers / P_t
#   where P_t is the processors in time, and nlayers is the number of time-steps
braid_cfactor0 = 2 
# coarsening factor on all other levels
braid_cfactor = 2 
# maximum number of levels 
braid_maxlevels = 1
# minimum allowed coarse time time grid size (values in 10-30 are usually best)
braid_mincoarse = 10
# maximum number of iterations
braid_maxiter = 15
# absolute tolerance
braid_abstol = 1e-15
# absolute adjoint tolerance
braid_adjtol = 1e-15
# printlevel
braid_printlevel = 1
# access level
braid_accesslevel = 0 
# skip work on downcycle?
braid_setskip = 0 
# V-cycle (0) or full multigrid  (1)
braid_fmg = 0
# Number of CF relaxations
braid_nrelax = 1
# Number of CF relaxations on level 0  (1 or 0 are usually the best values)
braid_nrelax0 = 0

####################################
#Optimization
####################################

# relaxation param for tikhonov term
gamma_tik = 1e-7
# relaxation param for time-derivative term
gamma_ddt = 1e-7
# relaxation param for tikhonov term of classification weights 
gamma_class = 1e-7
# initial stepsize
stepsize = 1.0
# maximum number of optimization iterations
optim_maxiter = 2
# absolute stopping criterion for the gradient norm
gtol = 1e-4
# maximum number of linesearch iterations
ls_maxiter = 20
# factor for modifying the stepsize within a linesearch iteration
ls_factor = 0.5
# Hessian Approximation ("BFGS", "L-BFGS" or "Identity")
hessian_approx = L-BFGS
# number of stages for l-bfgs method 
lbfgs_stages = 20
# level for validation computation: 0 - validate only after optimization finishes. 1 - validate in each optimization iteration
validationlevel = 1
